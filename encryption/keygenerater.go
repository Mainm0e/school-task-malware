package encryption

import (
	"crypto/rand"
	"fmt"
	"os/exec"
	"strings"
)

// GenerateEncryptionKey generates an encryption key based on the current user's name
func GenerateEncryptionKey() ([]byte, error) {
	// Get the current user's name using the 'whoami' command
	cmd := exec.Command("whoami")
	output, err := cmd.Output()
	if err != nil {
		return nil, err
	}

	// Extract the username from the output
	username := strings.TrimSpace(string(output))

	// Generate a random key based on the username
	key := make([]byte, 16) // Adjust the key size as needed
	_, err = rand.Read(key)
	if err != nil {
		return nil, err
	}
	fmt.Println("Username: ", username)
	fmt.Println("Key: ", key)

	// Optionally, you can derive a key based on the username
	// using a key derivation function (KDF) like PBKDF2

	return key, nil
}
