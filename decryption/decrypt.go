package decryption

import (
	"crypto/aes"
	"crypto/cipher"
	"errors"
	"fmt"
)

// Decrypt decrypts data using AES-GCM with a given key
func Decrypt(data []byte, key []byte) ([]byte, error) {
	fmt.Println("Decrypting data", key)
	block, err := aes.NewCipher(key)
	if err != nil {
		return nil, errors.New("failed to create cipher")
	}

	gcm, err := cipher.NewGCM(block)
	if err != nil {
		return nil, errors.New("failed to create GCM")

	}

	if len(data) < gcm.NonceSize() {
		return nil, errors.New("ciphertext too short")
	}

	nonce := data[:gcm.NonceSize()]
	ciphertext := data[gcm.NonceSize():]

	plaintext, err := gcm.Open(nil, nonce, ciphertext, nil)
	if err != nil {
		return nil, errors.New("failed to decrypt data")
	}

	return plaintext, nil
}
