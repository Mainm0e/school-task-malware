package decryption

import (
	"GoodSecurityServices/encryption"
	"GoodSecurityServices/utility"
	"fmt"
	"os"
	"strings"
)

func Start(pathData string) {
	filePath := "./data/" + pathData
	lines, err := utility.ReadLinesFromFile(filePath)
	if err != nil {
		fmt.Println("Error reading file:", err)
		return
	}

	key, err := encryption.GenerateEncryptionKey()
	if err != nil {
		panic(err)
	}

	// Print each line
	for _, line := range lines {
		//if file name file_paths.txt is found, skip it
		if strings.Contains(line, pathData) {
			fmt.Println("Skipping file:", line)
			continue
		}
		// get file data
		data, err := os.ReadFile(line)
		if err != nil {
			fmt.Println("Error reading file:", err)
			continue
		}

		decypted, err := Decrypt(data, key)
		if err != nil {
			fmt.Println("File:", line)
			fmt.Println("Error decrypting data:", err)
			continue
		}
		err = os.WriteFile(line, decypted, 0644)
		if err != nil {
			fmt.Println("Error writing to file:", err)
			continue
		}
	}
}
