package main

import (
	"os"
	"school-task-malware/decryption"
	"school-task-malware/encryption"
)

func main() {
	key, err := encryption.GenerateEncryptionKey()
	if err != nil {
		panic(err)
	}
	encryp := false
	// encrypt file name testcase.txt with the generated key
	if encryp {
		data, err := os.ReadFile("./testcase.txt")
		if err != nil {
			panic(err)
		}
		encrypted, err := encryption.Encrypt(data, key)
		if err != nil {
			panic(err)
		}
		// Make new file with the encrypted data
		err = os.WriteFile("./testcase1.txt", encrypted, 0644)
		if err != nil {
			panic(err)
		}
	} else {
		// decrypt file name testcase1.txt with the generated key
		data, err := os.ReadFile("./testcase1.txt")
		if err != nil {
			panic(err)
		}
		decrypted, err := decryption.Decrypt(data, key)
		if err != nil {
			panic(err)
		}
		// Make new file with the decrypted data
		err = os.WriteFile("./testcase2.txt", decrypted, 0644)
		if err != nil {
			panic(err)
		}
	}

	// test case do encryption and decryption

	data, err := os.ReadFile("./testcase.txt")
	if err != nil {
		panic(err)
	}
	encrypted, err := encryption.Encrypt(data, key)
	if err != nil {
		panic(err)
	}
	decrypted, err := decryption.Decrypt(encrypted, key)
	if err != nil {
		panic(err)
	}
	// Make new file with the decrypted data
	err = os.WriteFile("./testcase3.txt", decrypted, 0644)
}
