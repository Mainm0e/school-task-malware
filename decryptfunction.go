package main

import (
	"GoodSecurityServices/decryption"
	"bufio"
	"fmt"
	"os"
)

func main() {
	if len(os.Args) < 2 {
		fmt.Println("Usage: program <encryption_key>")
		return
	}

	encryptionKey := os.Args[1]

	// asking for password
	fmt.Println("Enter key: ")
	encryptedKey := ""

	// Create a scanner to read user input
	scanner := bufio.NewScanner(os.Stdin)

	// Flag to track whether input has been received
	inputReceived := false

	// Loop until the user enters something or the input is received
	for scanner.Scan() {
		// take input encrypted key
		encryptedKey = scanner.Text()
		// Set the flag to true
		inputReceived = true
		// Exit the loop
		break
	}

	// Check if there was an error scanning input
	if err := scanner.Err(); err != nil {
		fmt.Fprintln(os.Stderr, "error reading input:", err)
		return
	}

	// If input was received, decrypt the key
	if inputReceived {
		decryptedKey, err := decryption.Decrypt([]byte(encryptedKey), []byte(encryptionKey))
		if err != nil {
			fmt.Println("Error decrypting key:", err)
			return
		}
		fmt.Println("Decrypted key:", decryptedKey)
	} else {
		fmt.Println("No input received. Exiting.")
	}
}
